version: '3.7'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  # Base
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${SQL_ALCHEMY_CONN}
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  # Paths
  - AIRFLOW_VAR_DATA_PATH=${DATA_PATH}

  - AIRFLOW_VAR_ARTIFACT_VOLUME=${ARTIFACT_VOLUME}:${ARTIFACT_PATH}
  # Authentication
  - AIRFLOW_VAR_KAGGLE_USERNAME=${KAGGLE_USERNAME}
  - AIRFLOW_VAR_KAGGLE_KEY=${KAGGLE_KEY}

  - AIRFLOW_VAR_CONFIGS_PATH=${CONFIGS_PATH}
  - AIRFLOW_VAR_NETWORK=${NETWORK_NAME}
  - AIRFLOW_VAR_MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
  - AIRFLOW_VAR_MODEL_PATH=${MODEL_PATH}
  - AIRFLOW_VAR_MODEL_NAME=${MODEL_NAME}
  - AIRFLOW_VAR_MODEL_STAGE=${MODEL_STAGE}
  - AIRFLOW_VAR_PROD_DIR=data/models/2021-06-09

  # Settings for alert
#  - AIRFLOW__SMTP__SMTP_HOST=smtp.gmail.com
#  - AIRFLOW__SMTP__SMTP_PORT=587
#  - AIRFLOW__SMTP__SMTP_USER=${GMAIL_USERNAME}
#  - AIRFLOW__SMTP__SMTP_PASSWORD=${GMAIL_PASSWORD}

x-airflow-image: &airflow_image apache/airflow:2.0.0-python3.6
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================

services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PW}
      - POSTGRES_MULTIPLE_DATABASES=${DB_AIRFLOW}, ${DB_MLFLOW}
    ports:
      - "5432:5432"

  init:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: >-
      -c 'airflow db init
      && airflow users create
      --username admin --password admin
      --firstname Anonymous --lastname Admin
      --role Admin --email admin@example.org
      && airflow connections add fs_default --conn-type fs'

  webserver:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver

  scheduler:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./logs:/opt/airflow/logs
      - ./dags/:/opt/airflow/dags/
      - ./data/:/opt/airflow/data/
      - /var/run/docker.sock:/var/run/docker.sock

    environment: *airflow_environment
    command: scheduler

  ml_base:
    build:
      context: images/airflow-ml-base
    image: airflow-ml-base
    restart: "no"

  airflow-download-data:
    build:
      context: images/airflow-download-data
    image: airflow-download-data
    depends_on:
      - ml_base
    restart: "no"

  preprocess:
    build:
      context: images/airflow-preprocess
    image: airflow-preprocess
    depends_on:
      - ml_base
    restart: "no"

  split:
    build:
      context: images/airflow-split
    image: airflow-split
    depends_on:
      - ml_base
    restart: "no"

  train:
    build:
      context: images/airflow-train
    image: airflow-train
    depends_on:
      - ml_base
    restart: "no"

  validate:
    build:
      context: images/airflow-validate
    image: airflow-validate
    depends_on:
      - ml_base
    restart: "no"

  predict:
    build:
      context: images/airflow-predict
    image: airflow-predict
    depends_on:
      - ml_base
    restart: "no"

  mlflow:
    build:
      context: images/airflow-mlflow
    image:
      airflow-mlflow
    restart: always
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    volumes:
      - ${ARTIFACT_VOLUME}:${ARTIFACT_PATH}
    command:
      - sh  # enable var  substitution
      - -c
      - mlflow server
          --host 0.0.0.0
          --port 5000
          --backend-store-uri ${MLFLOW_TRACKING_URI}
          --default-artifact-root ${ARTIFACT_PATH}

volumes:
  logs:
  mlrun_data:
    name: ${ARTIFACT_VOLUME}